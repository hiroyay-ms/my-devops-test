name: Create a GitHub Self-Hosted runner container

on:
  workflow_dispatch:
    inputs:
      deploy-aci:
        description: 'Azure Container Instances の展開'
        required: true
        type: boolean
      resourceGroup:
        description: 'リソース グループ名'
        required: false
        type: string
      virtualNetwork:
        description: '仮想ネットワーク名'
        required: false
        type: string
      subnet:
        description: 'サブネット名'
        required: false
        type: string
      containerGroupName:
        description: 'コンテナー グループ名'
        required: false
        type: string

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v2
      
      - name: Login via Azure Container Registry
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.REGISTRY_LOGINSERVER }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}
      
      - name: Docker build and push
        run: |
          docker build ./src/runner -t ${{ secrets.REGISTRY_LOGINSERVER }}/gh_runner:${{ github.sha }} -f ./src/runner/dockerfile
          docker push ${{ secrets.REGISTRY_LOGINSERVER }}/gh_runner:${{ github.sha }}

  deploy-new-aci:
    if: ${{ github.event.inputs.deploy-aci == 'true' }}
    runs-on: ubuntu-latest
    needs: build-and-push-image

    steps:
      - name: Log in with Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Create Azure Container Instances
        uses: azure/CLI@v1
        with:
          inlineScript: |
            #!/bin/bash
            vnetId=$(az network vnet show -g ${{ github.event.inputs.resourceGroup }} -n ${{ github.event.inputs.virtualNetwork }} --query id --output tsv)
            subnetId=$(az network vnet subnet show -g ${{ github.event.inputs.resourceGroup }} --vnet-name ${{ github.event.inputs.virtualNetwork }} -n ${{ github.event.inputs.subnet }} --query id --output tsv)
            az container create \
              -g ${{ github.event.inputs.resourceGroup }} \
              -n ${{ github.event.inputs.containerGroupName }} \
              --image ${{ secrets.REGISTRY_LOGINSERVER }}/gh_runner:${{ github.sha }} \
              --registry-login-server ${{ secrets.REGISTRY_LOGINSERVER }} \
              --registry-username ${{ secrets.REGISTRY_USERNAME }} \
              --registry-password ${{ secrets.REGISTRY_PASSWORD }} \
              --vnet $vnetId \
              --subnet $subnetId

